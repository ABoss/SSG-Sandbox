/* place contents in grid */
.formatUpdates.textcol {
  width: 100%;
  margin: 0;
  padding-right: 30px;
  display: grid;
  grid-template-columns: 310px auto;
}

.formatUpdates > header,
.formatUpdates > .description {
  width: 600px;
}

.formatUpdates > * {
  grid-column: 2;
}
.formatUpdates > .sideImage {
  grid-column: 1;
  grid-row: 1;
}
.formatUpdates > #toc {
  grid-column: 1;
  grid-row: span 2;
}

/* toc sidebar */
#toc > ol {
  list-style-type: lower-roman;
}
#toc > ol ol {
  list-style-type: circle;
}

/* sticky toc */
#toc {
  position: sticky;
  top: 0;
  max-height: 100vh;
  overflow-y: scroll;
  margin: 0 30px;
}
#toc > h3 {
  position: sticky;
  top: 0;
  padding-top: 1em;
  background-color: #17141D;
  box-shadow: 0 0 0.5em 0.25em #17141D;
  z-index: 10;
}

/* filters styles */
#filters fieldset {
  margin: 0; padding: .25em .5em;
  border: 1px solid #f8c368;
  width: min-content;
}
#filters legend {
  padding: 0 0.5em;
  margin-left: 1em;
  font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;
  font-size: 1em;
}

.filterSet {
  margin: 0; padding: 0;
  display: flex;
    gap: 2em;
  list-style: none;
}

.filter label > span {
  padding: .1em;
}
.filter {
  --iconSize: 1.5em;
}
.pillbox {
  --pillSize: 1em; /* added to '--iconSize' */
}
.filter label,
.filter label > span {
  display: flex;
    gap: .5ch;
  align-items: center;
}

.filter label > span::before,
.pillbox label > span::after {
  content: "";
  display: inline-block;
  width: var(--iconSize); height: var(--iconSize);
}
.filter input[type="checkbox"] {
  position: absolute;
  width: var(--iconSize); height: var(--iconSize);
  opacity: 0;
}

/* pillbox toggles */
.pillbox label > span {
  position: relative; /* lets inner circle be positioned relative to parent */
}
.pillbox label > span::before {
  width: calc(var(--iconSize) + var(--pillSize));
  border-radius: calc(var(--iconSize)/2);
  background-color: grey;
}
.pillbox input[type="checkbox"] {
  width: calc(var(--iconSize) + var(--pillSize));
}
.pillbox label > span::after {
  position: absolute;
    left: calc(var(--iconSize) * .125);
  width: calc(var(--iconSize) * .75); height: calc(var(--iconSize) * .75);
  border-radius: 50%;
  background-color: white;
  box-shadow: 0 0 2px 0px rgba(0, 0, 0, .5);
  transition: transform .1s ease-in-out;
}
.pillbox label > input[type="checkbox"]:checked + span::after {
  transform: translateX(calc(var(--pillSize) + ( var(--iconSize) * .125 )));
}

/* faction filters */
#factionFilters label > span::before {
  background-size: cover;
  border-radius: 50%;
}

.fire::before { background-image: url(/images/icon-fire.png); }
.time::before { background-image: url(/images/icon-time.png); }
.justice::before { background-image: url(/images/icon-justice.png); }
.primal::before { background-image: url(/images/icon-primal.png); }
.shadow::before { background-image: url(/images/icon-shadow.png); }
.neutral::before { background-image: url(/images/icon-neutral.png); }
.mixed::before { background-image: url(/images/icon-mixed.png); }

/* visual cues */
.filter input[type="checkbox"]:hover + span::before,
.filter input[type="checkbox"]:focus + span::before {
  box-shadow: 0 0 4px 0px rgba(250, 250, 250, .8); 
}
.filter input[type="checkbox"]:not(:checked) + span::before,
.pillbox input[type="checkbox"]:not(:checked) + span::after {
  opacity: 50%;
}
/* .filter input[type="checkbox"]:not(:checked) + span {
  text-decoration: line-through;
} */

/* filter actions */
/* hide sections whose state is not included in the wrapper element's "show-states" list */
[data-show-states]:not([data-show-states~="Kept"]) [data-state="Kept"],
[data-show-states]:not([data-show-states~="Added"]) [data-state="Added"],
[data-show-states]:not([data-show-states~="Removed"]) [data-state="Removed"] {
  display: none;
}

/* style card sections */
.cardList {
  --cardsize: 140px;
  margin: 0; padding: 0;
  list-style: none;
  display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--cardsize), 1fr));
    gap: 1rem;
}

.faction {
  padding-top: 1em;
}

.faction h2 {
  --bannerColor2: transparent;
}
h2#Fire { --bannerColor1: var(--FireRed); }
h2#Time { --bannerColor1: var(--TimeYellow); }
h2#Justice { --bannerColor1: var(--JusticeGreen); }
h2#Primal { --bannerColor1: var(--PrimalBlue); }
h2#Shadow { --bannerColor1: var(--ShadowPurple); }
h2#Mixed { --bannerColor1: var(--MultiBlack); }
h2#Neutral { --bannerColor1: var(--NeutralGray); }

h2#Praxis { --bannerColor1: var(--FireRed); --bannerColor2: var(--TimeYellow); }
h2#Combrei { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--JusticeGreen); }
h2#Hooru { --bannerColor1: var(--JusticeGreen); --bannerColor2: var(--PrimalBlue); }
h2#Feln { --bannerColor1: var(--PrimalBlue); --bannerColor2: var(--ShadowPurple); }
h2#Stonescar { --bannerColor1: var(--FireRed); --bannerColor2: var(--ShadowPurple); }
h2#Rakano { --bannerColor1: var(--FireRed); --bannerColor2: var(--JusticeGreen); }
h2#Elysian { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--PrimalBlue); }
h2#Argenport { --bannerColor1: var(--JusticeGreen); --bannerColor2: var(--ShadowPurple); }
h2#Skycrag { --bannerColor1: var(--FireRed); --bannerColor2: var(--PrimalBlue); }
h2#Xenan { --bannerColor1: var(--TimeYellow); --bannerColor2: var(--ShadowPurple); }

.faction h2::after {
  content: "";
  display: block;
  position: relative;
    top: 0px;
  width: 100%; height: .75em;
  background-image: linear-gradient(90deg,var(--bannerColor1),var(--bannerColor2));
  border-bottom: 2px solid #3c3a3a;
}

.state {
  margin-bottom: 2em;
}

/* style cards */
.card > p {
  display: none;
}

.card img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

/* draft pack weightings */
.card {
  position: relative;
}
.card::before, .card::after {
  display: flex;
  width: 3em;
  height: 3em;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  position: absolute;
  bottom: 0;
}
.card::before {
  content: attr(data-weight-before);
  left: 1em;
  background-color: grey;
}
.card::after {
  content: attr(data-weight-after);
  right: 1em;
  background-color: green;
}
.card[data-weight-before="-"]::before,
.card[data-weight-after="-"]::after {
  background-color: black;
}